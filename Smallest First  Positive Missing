class Solution {
    public int firstMissingPositive(int[] nums) {
        int n = nums.length;
        
        // First pass: Mark non-positive numbers and numbers > n with (n+1)
        for (int i = 0; i < n; i++) {
            if (nums[i] <= 0 || nums[i] > n) {
                nums[i] = n + 1;
            }
        }
        
        // Second pass: Use indices to mark presence of numbers
        for (int i = 0; i < n; i++) {
            int num = Math.abs(nums[i]);
            if (num <= n) {
                nums[num - 1] = -Math.abs(nums[num - 1]);
            }
        }
        
        // Third pass: Find the first index that wasn't marked
        for (int i = 0; i < n; i++) {
            if (nums[i] > 0) {
                return i + 1;
            }
        }
        
        // If all numbers 1..n are present, return n+1
        return n + 1;
    }
}
