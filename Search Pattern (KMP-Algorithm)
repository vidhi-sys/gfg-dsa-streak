#User function Template for python3

class Solution:
    def search(self, pat, txt):
        if not pat: return []
        lps=[0] * len(pat)
        for i in range(1,len(pat)):
            j=lps[i-1]
            while j>0 and pat[i]!=pat[j]:
                j=lps[j-1]
            if pat[i]==pat[j]:
                j+=1
            lps[i]=j
        res=[]
        j=0
        for i in range(len(txt)):
            while j>0 and txt[i]!=pat[j]:
                j=lps[j-1]
            if txt[i]== pat[j]:
                j+=1
            if j==len(pat):
                res.append(i-j+1)
                j=lps[j-1]
        return res        


#{ 
 # Driver Code Starts
#Initial Template for Python 3

if __name__ == '__main__':
    t = int(input())
    for _ in range(t):
        s = input().strip()
        patt = input().strip()
        ob = Solution()
        ans = ob.search(patt, s)
        if len(ans) == 0:
            print("[]", end="")
        for value in ans:
            print(value, end=' ')
        print()

# } Driver Code Ends
